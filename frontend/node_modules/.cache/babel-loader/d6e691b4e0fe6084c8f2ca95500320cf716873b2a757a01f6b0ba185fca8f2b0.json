{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:4242/api';\n\n// Create Axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Card API calls\nexport const getAllCards = async () => {\n  const response = await api.get('/cards');\n  return response.data;\n};\nexport const createCard = async (cardholderId, description, spendLimitCents) => {\n  const response = await api.post('/cards', {\n    cardholderId,\n    description,\n    spendLimitCents\n  });\n  return response.data;\n};\nexport const getCardDetails = async cardId => {\n  const response = await api.get(`/cards/${cardId}`);\n  return response.data;\n};\nexport const freezeCard = async (cardId, freeze) => {\n  const response = await api.patch(`/cards/${cardId}/freeze`, {\n    freeze\n  });\n  return response.data;\n};\nexport const getCardTestCredentials = async cardId => {\n  const response = await api.get(`/cards/${cardId}/test-credentials`);\n  return response.data;\n};\n\n// Rule API calls\nexport const createRule = async rule => {\n  const response = await api.post('/rules', rule);\n  return response.data;\n};\nexport const deleteRule = async ruleId => {\n  await api.delete(`/rules/${ruleId}`);\n};\n\n// Balance API calls\nexport const getFundingSourceBalance = async cardholderId => {\n  const response = await api.get(`/cardholders/${cardholderId}/balance`);\n  return response.data;\n};\nexport const getCardBalance = async cardId => {\n  const response = await api.get(`/cards/${cardId}/balance`);\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","getAllCards","response","get","data","createCard","cardholderId","description","spendLimitCents","post","getCardDetails","cardId","freezeCard","freeze","patch","getCardTestCredentials","createRule","rule","deleteRule","ruleId","delete","getFundingSourceBalance","getCardBalance"],"sources":["/Users/anishgoel/virtualCard/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Card, Rule, CardDetails } from '../types';\n\nconst API_URL = 'http://localhost:4242/api';\n\n// Create Axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Card API calls\nexport const getAllCards = async (): Promise<Card[]> => {\n  const response = await api.get('/cards');\n  return response.data;\n};\n\nexport const createCard = async (cardholderId: string, description: string, spendLimitCents?: number): Promise<Card> => {\n  const response = await api.post('/cards', { cardholderId, description, spendLimitCents });\n  return response.data;\n};\n\nexport const getCardDetails = async (cardId: string): Promise<CardDetails> => {\n  const response = await api.get(`/cards/${cardId}`);\n  return response.data;\n};\n\nexport const freezeCard = async (cardId: string, freeze: boolean): Promise<Card> => {\n  const response = await api.patch(`/cards/${cardId}/freeze`, { freeze });\n  return response.data;\n};\n\nexport const getCardTestCredentials = async (cardId: string) => {\n  const response = await api.get(`/cards/${cardId}/test-credentials`);\n  return response.data;\n};\n\n// Rule API calls\nexport const createRule = async (rule: Partial<Rule>): Promise<Rule> => {\n  const response = await api.post('/rules', rule);\n  return response.data;\n};\n\nexport const deleteRule = async (ruleId: string): Promise<void> => {\n  await api.delete(`/rules/${ruleId}`);\n};\n\n// Balance API calls\nexport const getFundingSourceBalance = async (cardholderId: string) => {\n  const response = await api.get(`/cardholders/${cardholderId}/balance`);\n  return response.data;\n};\n\nexport const getCardBalance = async (cardId: string) => {\n  const response = await api.get(`/cards/${cardId}/balance`);\n  return response.data;\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAA6B;EACtD,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,QAAQ,CAAC;EACxC,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,YAAoB,EAAEC,WAAmB,EAAEC,eAAwB,KAAoB;EACtH,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACY,IAAI,CAAC,QAAQ,EAAE;IAAEH,YAAY;IAAEC,WAAW;IAAEC;EAAgB,CAAC,CAAC;EACzF,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMM,cAAc,GAAG,MAAOC,MAAc,IAA2B;EAC5E,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,UAAUQ,MAAM,EAAE,CAAC;EAClD,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAG,MAAAA,CAAOD,MAAc,EAAEE,MAAe,KAAoB;EAClF,MAAMX,QAAQ,GAAG,MAAML,GAAG,CAACiB,KAAK,CAAC,UAAUH,MAAM,SAAS,EAAE;IAAEE;EAAO,CAAC,CAAC;EACvE,OAAOX,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMW,sBAAsB,GAAG,MAAOJ,MAAc,IAAK;EAC9D,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,UAAUQ,MAAM,mBAAmB,CAAC;EACnE,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMY,UAAU,GAAG,MAAOC,IAAmB,IAAoB;EACtE,MAAMf,QAAQ,GAAG,MAAML,GAAG,CAACY,IAAI,CAAC,QAAQ,EAAEQ,IAAI,CAAC;EAC/C,OAAOf,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMc,UAAU,GAAG,MAAOC,MAAc,IAAoB;EACjE,MAAMtB,GAAG,CAACuB,MAAM,CAAC,UAAUD,MAAM,EAAE,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAME,uBAAuB,GAAG,MAAOf,YAAoB,IAAK;EACrE,MAAMJ,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,gBAAgBG,YAAY,UAAU,CAAC;EACtE,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMkB,cAAc,GAAG,MAAOX,MAAc,IAAK;EACtD,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,UAAUQ,MAAM,UAAU,CAAC;EAC1D,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}