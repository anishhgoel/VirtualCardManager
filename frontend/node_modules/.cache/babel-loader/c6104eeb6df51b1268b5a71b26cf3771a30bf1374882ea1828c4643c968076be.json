{"ast":null,"code":"// Type definitions for our application\n\nexport let RuleType = /*#__PURE__*/function (RuleType) {\n  RuleType[\"SPEND_LIMIT\"] = \"SPEND_LIMIT\";\n  RuleType[\"MERCHANT_CATEGORY\"] = \"MERCHANT_CATEGORY\";\n  RuleType[\"TIME_WINDOW\"] = \"TIME_WINDOW\";\n  return RuleType;\n}({});\nexport let SpendInterval = /*#__PURE__*/function (SpendInterval) {\n  SpendInterval[\"DAILY\"] = \"DAILY\";\n  SpendInterval[\"MONTHLY\"] = \"MONTHLY\";\n  SpendInterval[\"LIFETIME\"] = \"LIFETIME\";\n  return SpendInterval;\n}({});","map":{"version":3,"names":["RuleType","SpendInterval"],"sources":["/Users/anishgoel/virtualCard/frontend/src/types/index.ts"],"sourcesContent":["// Type definitions for our application\n\nexport interface Card {\n  id: string;\n  cardholderId: string;\n  stripeId: string;\n  status: string;\n  description?: string;\n  last4?: string;\n  masked_pan?: string;\n  createdAt: string;\n}\n\nexport enum RuleType {\n  SPEND_LIMIT = 'SPEND_LIMIT',\n  MERCHANT_CATEGORY = 'MERCHANT_CATEGORY',\n  TIME_WINDOW = 'TIME_WINDOW'\n}\n\nexport enum SpendInterval {\n  DAILY = 'DAILY',\n  MONTHLY = 'MONTHLY',\n  LIFETIME = 'LIFETIME'\n}\n\nexport interface Rule {\n  id: string;\n  cardId: string;\n  type: RuleType;\n  spendLimitCents?: number;\n  spendInterval?: SpendInterval;\n  merchantAllowList?: string;\n  merchantBlockList?: string;\n  categoryAllowList?: string;\n  categoryBlockList?: string;\n  allowedWeekdays?: string;\n  allowedHourStart?: number;\n  allowedHourEnd?: number;\n  createdAt: string;\n}\n\nexport interface Authorization {\n  id: string;\n  stripeId: string;\n  cardId: string;\n  amountCents: number;\n  currency: string;\n  merchant: string;\n  decision: 'APPROVED' | 'DECLINED' | 'PENDING';\n  createdAt: string;\n}\n\nexport interface CardDetails extends Card {\n  rules: Rule[];\n  authorizations: Authorization[];\n}\n\nexport interface User {\n  id: string;\n  username: string;\n  email: string;\n  password?: string;\n  cardholderId: string;\n  name?: string;\n  createdAt: string;\n}\n\nexport interface AuthState {\n  isAuthenticated: boolean;\n  user: User | null;\n  loading: boolean;\n  error: string | null;\n} "],"mappings":"AAAA;;AAaA,WAAYA,QAAQ,0BAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;AAMpB,WAAYC,aAAa,0BAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}